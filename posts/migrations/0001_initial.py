# Generated by Django 4.0 on 2022-04-02 08:43

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_remove_normaluser_nickname_normaluser_qq_number_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修改时间')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修改时间')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DigitalFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修改时间')),
                ('inves_time', models.DateField(default=django.utils.timezone.now, verbose_name='调查日期')),
                ('name', models.CharField(max_length=20, verbose_name='姓名')),
                ('gender', models.IntegerField(choices=[(0, '女性'), (1, '男性')], verbose_name='性别')),
                ('birthday', models.DateField(blank=True, verbose_name='出生日期')),
                ('nation', models.CharField(blank=True, max_length=20, verbose_name='民族')),
                ('school', models.CharField(blank=True, max_length=100, verbose_name='在读学校')),
                ('grade_and_class', models.CharField(blank=True, max_length=50, verbose_name='年级班别')),
                ('school_address', models.CharField(blank=True, max_length=100, verbose_name='学校地址')),
                ('height', models.FloatField(blank=True, verbose_name='身高')),
                ('weight', models.FloatField(blank=True, verbose_name='体重')),
                ('shoe_size', models.FloatField(blank=True, verbose_name='鞋码')),
                ('hobbies', models.CharField(blank=True, max_length=100, verbose_name='特长爱好')),
                ('academic_record', models.CharField(blank=True, max_length=200, verbose_name='学习成绩')),
                ('contact_of_teacher', models.CharField(blank=True, max_length=100, verbose_name='班主任联系方式')),
                ('contact_of_parent', models.CharField(blank=True, max_length=100, verbose_name='家长联系方式')),
                ('home_address', models.CharField(blank=True, max_length=100, verbose_name='家庭住址')),
                ('home_postal_code', models.CharField(blank=True, max_length=10, verbose_name='邮编')),
                ('single_parent_or_not', models.CharField(blank=True, max_length=100, verbose_name='是否单亲')),
                ('low_income_or_not', models.CharField(blank=True, max_length=100, verbose_name='是否低保户')),
                ('orphan_or_not', models.CharField(blank=True, max_length=100, verbose_name='是否孤儿')),
                ('your_little_wish', models.CharField(blank=True, max_length=100, verbose_name='小小心愿')),
                ('the_most_eager_thing_to_do', models.CharField(blank=True, max_length=200, verbose_name='最想做的事情')),
                ('name_of_family_member', models.CharField(blank=True, max_length=20, verbose_name='姓名')),
                ('relationship', models.CharField(blank=True, max_length=20, verbose_name='与孩子的关系')),
                ('age', models.IntegerField(blank=True, verbose_name='年龄')),
                ('occupation', models.CharField(blank=True, max_length=100, verbose_name='职业')),
                ('monthly_income', models.CharField(blank=True, max_length=100, verbose_name='月收入')),
                ('health_condition', models.CharField(blank=True, max_length=100, verbose_name='健康状况')),
                ('basic_information', models.CharField(blank=True, max_length=200, verbose_name='基本情况')),
                ('debt_situation', models.CharField(blank=True, max_length=200, verbose_name='债务情况')),
                ('biggest_difficulty_of_family', models.CharField(blank=True, max_length=200, verbose_name='目前家庭最大困难')),
                ('family_assets', models.CharField(blank=True, max_length=200, verbose_name='家庭资产（家用电器、主要农作物等）')),
                ('housing_situation', models.CharField(blank=True, max_length=200, verbose_name='住房情况')),
                ('main_source_of_monthly_income', models.CharField(blank=True, max_length=200, verbose_name='全家月收入及主要来源')),
                ('live_in_school_or_not', models.BooleanField(blank=True, default=False, verbose_name='是否住校')),
                ('expenses_of_living_in_school', models.CharField(blank=True, max_length=200, verbose_name='住校费用')),
                ('paid_or_not', models.BooleanField(blank=True, default=True, verbose_name='本学期缴费情况')),
                ('other_help_received', models.CharField(blank=True, max_length=500, verbose_name='获得其他资助、补助、奖学金（名称及金额）')),
                ('reward_received', models.CharField(blank=True, max_length=500, verbose_name='曾得到何种奖励')),
                ('statement_of_student', models.TextField(blank=True, verbose_name='学生自述')),
                ('comments_of_teacher', models.TextField(blank=True, verbose_name='班主任评语')),
                ('home_visit_notes_and_opinions', models.TextField(blank=True, verbose_name='家访手记及意见')),
                ('orphan', models.BooleanField(blank=True, default=False, verbose_name='孤儿')),
                ('single_parent', models.BooleanField(blank=True, default=False, verbose_name='单亲')),
                ('illness_or_paralysis', models.BooleanField(blank=True, default=False, verbose_name='重病、残疾')),
                ('multi_children', models.BooleanField(blank=True, default=False, verbose_name='多孩子读书')),
                ('lack_of_workforce', models.BooleanField(blank=True, default=False, verbose_name='劳动力不足')),
                ('other_types', models.CharField(blank=True, max_length=200, verbose_name='其他')),
                ('remarks', models.CharField(blank=True, max_length=200, verbose_name='备注')),
                ('investigator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.normaluser', verbose_name='调查人')),
            ],
            options={
                'verbose_name': '数字化家访调查表',
                'verbose_name_plural': '数字化家访调查表',
                'ordering': ['-inves_time'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('last_mod_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修改时间')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('published_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='发布时间')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='浏览量')),
                ('status', models.CharField(choices=[('d', '草稿'), ('p', '发表')], default='p', max_length=1, verbose_name='文章状态')),
                ('comment_status', models.CharField(choices=[('o', '打开'), ('c', '关闭')], default='o', max_length=1, verbose_name='评论状态')),
                ('type', models.CharField(choices=[('a', '文章'), ('p', '页面')], default='a', max_length=1, verbose_name='类型')),
                ('article_order', models.PositiveIntegerField(default=0, verbose_name='排序，值越大越前')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='文章', to='accounts.normaluser', verbose_name='作者')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.category', verbose_name='文章分类')),
                ('tags', models.ManyToManyField(blank=True, to='posts.Tag', verbose_name='标签集合')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
                'ordering': ['-article_order', '-published_time'],
                'get_latest_by': 'id',
            },
        ),
    ]
